{"ast":null,"code":"// frontend/src/services/auth.js\n// This file contains functions for making API calls to your backend's authentication routes.\nimport axios from 'axios';\n\n// Define your backend API URL. Make sure it matches your server.js port.\n// In a real application, this would be an environment variable.\nconst API_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000/api/auth';\n\n// Function to register a new user\nexport const registerUser = async (username, email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/register`, {\n      username,\n      email,\n      password\n    });\n    return response.data; // Returns token and message\n  } catch (error) {\n    throw error; // Re-throw error for handling in the component\n  }\n};\n\n// Function to log in a user\nexport const loginUser = async (email, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      email,\n      password\n    });\n    return response.data; // Returns token and message\n  } catch (error) {\n    throw error; // Re-throw error\n  }\n};","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_BACKEND_URL","registerUser","username","email","password","response","post","data","error","loginUser"],"sources":["C:/Users/HP/Downloads/Metaverse/frontend/src/services/auth.js"],"sourcesContent":["// frontend/src/services/auth.js\r\n// This file contains functions for making API calls to your backend's authentication routes.\r\nimport axios from 'axios';\r\n\r\n// Define your backend API URL. Make sure it matches your server.js port.\r\n// In a real application, this would be an environment variable.\r\nconst API_URL = process.env.REACT_APP_BACKEND_URL || 'http://localhost:5000/api/auth';\r\n\r\n// Function to register a new user\r\nexport const registerUser = async (username, email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/register`, {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n    return response.data; // Returns token and message\r\n  } catch (error) {\r\n    throw error; // Re-throw error for handling in the component\r\n  }\r\n};\r\n\r\n// Function to log in a user\r\nexport const loginUser = async (email, password) => {\r\n  try {\r\n    const response = await axios.post(`${API_URL}/login`, {\r\n      email,\r\n      password\r\n    });\r\n    return response.data; // Returns token and message\r\n  } catch (error) {\r\n    throw error; // Re-throw error\r\n  }\r\n};"],"mappings":"AAAA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB,IAAI,gCAAgC;;AAErF;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAC/D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,WAAW,EAAE;MACvDK,QAAQ;MACRC,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAON,KAAK,EAAEC,QAAQ,KAAK;EAClD,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGT,OAAO,QAAQ,EAAE;MACpDM,KAAK;MACLC;IACF,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMA,KAAK,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}